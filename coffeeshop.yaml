openapi: 3.0.0
servers:
  - url: 'http://orderstore.swagger.io/v2'
info:
  description: >-
    This is a sample server Orderstore server. For this sample, you can use the api key
    `special-key` to test the authorization filters.
  version: 1.0.0
  title: OpenAPI Orderstore
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: order
    description: Everything about your Orders

paths:
  /order:
    post:
      tags:
        - order
      summary: Submit a new order
      description: ''
      operationId: addOrder
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Order'
  /order/findByStatus:
    get:
      tags:
        - order
      summary: Finds Orders by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findOrdersByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          style: form
          explode: false
          deprecated: false
          schema:
            type: array
            items:
              type: string
              enum:
                - placed
                - making
                - complete
                - delivered
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid status value
  '/order/{orderId}':
    get:
      tags:
        - order
      summary: Find order by ID
      description: Returns a single order
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    patch:
      tags:
        - order
      summary: Updates a order in the store with form data
      description: ''
      operationId: updateOrderWithForm
      parameters:
        - name: orderId
          in: path
          description: ID of order that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: items
          in: query
          description: items in order that can be updated
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: status order that needs to be updated
          required: true
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
      #requestBody:
      #  content:
      #    application/x-www-form-urlencoded:
      #      schema:
      #        type: object
      #        properties:
      #          name:
      #            description: Updated name of the order
      #            type: string
      #          status:
      #            description: Updated status of the order
      #            type: string
    delete:
      tags:
        - order
      summary: Deletes a order
      description: ''
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: Order id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid order value


externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  requestBodies:
    Order:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Order'
        application/xml:
          schema:
            $ref: '#/components/schemas/Order'
      description: Order object that needs to be added to the store
      required: true
  schemas:
    Order:
      title: Coffeeshop Order
      description: An orders from the order store
      type: object
      properties:
        items:
          type: string
        id:
          type: integer
          format: int64
        status:
          type: string
          description: Order Status
          enum:
            - placed
            - making
            - complete
            - delivered
      xml:
        name: Order

    