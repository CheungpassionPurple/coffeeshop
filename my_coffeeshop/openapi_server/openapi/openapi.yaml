openapi: 3.0.0
info:
  description: An API to interact with a Coffee Shop
  title: Simple Coffee Shop API
  version: 1.0.0
servers:
- description: Example API Service running locally
  url: http://localhost:8080/v3
tags:
- description: Access point to Coffee Shop Orders
  name: store
paths:
  /store/order:
    get:
      description: ""
      operationId: get_orders
      responses:
        "200":
          content:
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: successful operation
      summary: Retrieve all records of coffee orders from the store.
      tags:
      - store
      x-openapi-router-controller: openapi_server.controllers.store_controller
    post:
      description: ""
      operationId: add_order
      parameters:
      - description: The name of the type of coffee to order.
        explode: true
        in: query
        name: name
        required: true
        schema:
          enum:
          - latte
          - espresso
          - drip coffee
          type: string
        style: form
      - description: Drink size.
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: medium
          enum:
          - small
          - medium
          - large
          type: string
        style: form
      - description: Temperature of the drink.
        explode: true
        in: query
        name: temperature
        required: false
        schema:
          default: hot
          enum:
          - hot
          - cold
          type: string
        style: form
      - description: Type of milk added to the drink.
        explode: true
        in: query
        name: milk
        required: false
        schema:
          default: noMilk
          enum:
          - noMilk
          - whole
          - oat
          - soy
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: successful operation
        "405":
          description: Invalid input
      summary: Submit a new order
      tags:
      - store
      x-openapi-router-controller: openapi_server.controllers.store_controller
  /store/order/findByStatus:
    get:
      description: ""
      operationId: find_orders_by_status
      parameters:
      - deprecated: false
        description: Status values that need to be considered for filter
        explode: false
        in: query
        name: status
        required: true
        schema:
          enum:
          - placed
          - making
          - made
          - delivered
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: successful operation
        "400":
          description: Invalid status value
      summary: Finds Orders by status
      tags:
      - store
      x-openapi-router-controller: openapi_server.controllers.store_controller
  /store/order/{orderId}:
    delete:
      description: Deletes a record of an order.
      operationId: delete_order
      parameters:
      - description: Order id to delete
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/xml:
              schema:
                type: string
          description: Successful deletion
        "400":
          description: Invalid order value
      summary: Deletes a record of an order.
      tags:
      - store
      x-openapi-router-controller: openapi_server.controllers.store_controller
    get:
      description: Returns all information on a single order.
      operationId: get_order_by_id
      parameters:
      - description: ID of order to return all information on.
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Order not found
      summary: Find order by ID
      tags:
      - store
      x-openapi-router-controller: openapi_server.controllers.store_controller
    patch:
      description: Change the status of an order in the store. The order must be identified
        by its ID.
      operationId: update_order
      parameters:
      - description: ID of order that needs to be updated
        explode: false
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: status order that needs to be updated
        explode: true
        in: query
        name: status
        required: true
        schema:
          enum:
          - placed
          - making
          - made
          - delivered
          type: string
        style: form
      responses:
        "200":
          content:
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: Successful update
        "405":
          description: Invalid input
      summary: Updates a order in the store
      tags:
      - store
      x-openapi-router-controller: openapi_server.controllers.store_controller
components:
  schemas:
    Order:
      description: A coffee order from the coffee shop. Describes exactly one drink.
      example:
        size: small
        name: latte
        temperature: hot
        milk: noMilk
        id: 0
        status: placed
      properties:
        id:
          description: A unique ID number that identifies this specific coffee order.
          format: int64
          title: id
          type: integer
        name:
          description: The name of the type of coffee to order.
          enum:
          - latte
          - espresso
          - drip coffee
          title: name
          type: string
        size:
          description: Drink size.
          enum:
          - small
          - medium
          - large
          title: size
          type: string
        temperature:
          description: Temperature of the drink.
          enum:
          - hot
          - cold
          title: temperature
          type: string
        milk:
          description: Type of milk added to the drink.
          enum:
          - noMilk
          - whole
          - oat
          - soy
          title: milk
          type: string
        status:
          description: Order Status
          enum:
          - placed
          - making
          - made
          - delivered
          title: status
          type: string
      title: Coffeeshop Coffee Order
      type: object
      xml:
        name: Order
